#!/usr/bin/env ruby

ASEPSISCTL_VERSION = "1.1"
begin
    BASE_DIR = File.dirname(File.readlink(__FILE__))
rescue
    BASE_DIR = File.dirname(__FILE__)
end

require BASE_DIR + '/lib/micro-optparse'
require BASE_DIR + '/lib/helpers'

##############################################################################################################################

DISABLE_FILE_PATH = "/var/db/.asepsis.disabled"
PREFIX_PATH = "/usr/local/.dscage"
SUSPEND_LOCK_PATH = "#{PREFIX_PATH}/.asepsis.suspend.lock"
KEXT_PATH = "/System/Library/Extensions/Asepsis.kext"
ASEPSISD_PATH = File.join(KEXT_PATH, "Contents", "Resources", "asepsisd")
LIBASEPSIS_PATH = File.join(KEXT_PATH, "Contents", "Resources", "libAsepsis.dylib")

##############################################################################################################################

options = Parser.new do |p|
    p.banner =  <<-EOS
The control script for asepsis operations.

Usage:
    asepsisctl [command] [options]
   
Commands:
    suspend                          Suspends immediate asepsis operations.
    disable                          Disables asepsis.
    enable                           Enables asepsis.
    neton                            Enables DS_Store files on network volumes.
    netoff                           Disables ... (http://support.apple.com/kb/ht1629).
    diagnose                         Diagnoses asepsis setup
    migratein                        Migrates .DS_Store files in #{PREFIX_PATH}
    migrateout                       Migrates .DS_Store files from #{PREFIX_PATH}
    prune                            Removes empty directories from #{PREFIX_PATH}
    clean                            Deletes all content from #{PREFIX_PATH}
   
Where options are:
EOS
    p.version = "asepsisctl #{ASEPSISCTL_VERSION}"
    p.option :root, "Root folder for migration", :default => File.expand_path("~")
    p.option :dry, "Run migration in dry mode", :default => false
    p.option :verbose, "Be more verbose", :default => false
end.process!

##############################################################################################################################

require BASE_DIR + '/cmd/suspend'
require BASE_DIR + '/cmd/disable'
require BASE_DIR + '/cmd/enable'
require BASE_DIR + '/cmd/neton'
require BASE_DIR + '/cmd/netoff'
require BASE_DIR + '/cmd/diagnose'
require BASE_DIR + '/cmd/migratein'
require BASE_DIR + '/cmd/migrateout'
require BASE_DIR + '/cmd/prune'
require BASE_DIR + '/cmd/clean'

##############################################################################################################################

command = ARGV[0]

die("unknown command, usage: asepsisctl --help") unless Object.respond_to?("cmd_#{command}", true)

eval("cmd_#{command}(options)") # dispatch the command